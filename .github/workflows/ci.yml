name: Rust CI

on:
  push:
    branches:
      - develop
  pull_request:
    branches:
      - develop

jobs:
  build:
    name: CI Linux
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable

      - name: Generate secret key
        run: head -c16 /dev/urandom > src/secret.key

      - name: Cache Cargo registry
        uses: actions/cache@v4
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}

      - name: Cache Cargo build
        uses: actions/cache@v4
        with:
          path: target
          key: ${{ runner.os }}-cargo-build-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-build-

      - name: Rust Linting and Formatting
        run: |
          cargo fmt 
          cargo clippy -- -D warnings

      - name: Build release version
        run: cargo build --release

      - name: Run tests
        run: cargo test -- --nocapture

      - name: Docker build images
        run: docker-compose build

      - name: Run container Docker
        run: |
          docker-compose up -d
          docker-compose ps
          docker-compose stop

      - name: List files in target/release
        run: ls -al target/release

      - name: Save Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: app-rust-platform-cv
          path: target/release/platform-cv