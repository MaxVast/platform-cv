name: Rust CI

on: [push, pull_request]

jobs:
  build:
    name: CI Linux
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true

      - name: Cache Cargo registry
        uses: actions/cache@v2
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}

      - name: Cache Cargo build
        uses: actions/cache@v2
        with:
          path: target
          key: ${{ runner.os }}-cargo-build-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-build-

      - name: Rust Linting and Formatting
        run: |
          cargo fmt 
          cargo clippy -- -D warnings

      - name: Build release version
        run: cargo build --release

      - name: Run tests
        run: cargo test -- --nocapture

      - name: Docker build images
        run: docker-compose build

      - name: Run App
        run: |
          docker-compose up -d
          docker-compose ps
          target/release/platform-cv > /dev/null

      - name: Wait for service
        run: |
          sleep 5
          while status="$(docker inspect --format="{{print .State.Status}}" "$(docker-compose ps -q app)")"; do
            case $status in
              starting) sleep 1;;
              running) exit 0;;
              unhealthy)
                docker-compose ps
                exit 1
              ;;
            esac
          done
          exit 1

      - name: Check App
        run: |
          sleep 5
          HTTP_CODE=$(curl -ik -X GET 'http://127.0.0.1:8080/health-check' -o /dev/null -w '%{http_code}\n' -s)
          echo $HTTP_CODE
          if [ "$HTTP_CODE" = "200" ]; then
              exit 0
          fi
          exit 1

      - name: Check App homepage
        run: |
          sleep 5
          HTTP_CODE=$(curl -ik -X GET 'http://127.0.0.1:8080' -o /dev/null -w '%{http_code}\n' -s)
          echo $HTTP_CODE
          if [ "$HTTP_CODE" = "200" ]; then
              exit 0
          fi
          exit 1

      - name: List files in target/release
        run: ls -al target/release

      - name: Save Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: app-rust-platform-cv
          path: target/release/platform-cv